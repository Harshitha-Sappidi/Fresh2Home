/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.researcherRole;

import business.Business;
import business.Idea.Idea;
import business.enterprise.Enterprise;
import business.enterprise.KnowledgeTransferEnterprise;
import business.feedback.Feedback;
import business.network.Network;
import business.organization.Organization;
import business.person.Person;
import business.userAccount.UserAccount;
import business.workQueue.ResearcherWorkRequest;
import business.workQueue.WorkRequest;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author bhavanidevulapalli
 */
public class ResearcherDashboardJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ResearcherDashboardJPanel
     */
        
    private JPanel userProcessContainer;
    private UserAccount account;
    private Business business;
    private Network network;
    private Enterprise enterprise; 
    private WorkRequest request;
    private boolean view=false;
    private boolean licenPlateCaptured=false;
    private int userId;
    
    private final JFileChooser fileChooser = new JFileChooser();
    ImageIcon ideaImage;
    
    public ResearcherDashboardJPanel(JPanel userProcessContainer, UserAccount account, Business business, Network network,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        this.network = network;
        
        this.userId =account.getPerson().getPersonId();
        System.out.println(this.userId);
        System.out.println(account.getPerson().getFirstName());

        FileFilter jpegFilter = new FileNameExtensionFilter("JPEG file", "jpg", "jpeg");
        FileFilter pngFilter = new FileNameExtensionFilter("PNG file", "png", "png");

        fileChooser.addChoosableFileFilter(jpegFilter);
        fileChooser.addChoosableFileFilter(pngFilter);
        fileChooser.setFileFilter(pngFilter);
        String userName = account.getUsername();
        txtResearcherName.setText(userName);
        
        Feedbacks.setVisible(false);
        LayerVisible.setVisible(false); 
        
        setupTableTextWrap();     
        populateIdeaTable(this.userId);
        
        Researcher.addChangeListener(e -> {
        int selectedIndex = Researcher.getSelectedIndex();
        if (selectedIndex == 0) {
            populateIdeaTable(this.userId);
            setupTableTextWrap();
        }
        // Assuming the "Blog" tab is the third tab, its index would be 2
        if (selectedIndex == 1) {
            populateIdeaTable1();
            setupTableTextWrap1();
        }

    });
        Researcher.addChangeListener(new javax.swing.event.ChangeListener() {
        public void stateChanged(javax.swing.event.ChangeEvent evt) {
        ResearcherStateChanged(evt);
            }
        });
        
        tblViewIdea.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblViewIdeaMouseClicked(evt);
        }
    });
        
        tblViewIdea1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblViewIdeaMouseClicked(evt);
        }
    });
        
        


    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        Researcher = new javax.swing.JTabbedPane();
        viewFeedback = new javax.swing.JPanel();
        btnGetFeedback = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblViewIdea = new javax.swing.JTable();
        LayerVisible = new javax.swing.JTabbedPane();
        Feedback = new javax.swing.JPanel();
        feedbackScroll = new javax.swing.JScrollPane();
        tblViewFeedback = new javax.swing.JTable();
        update = new javax.swing.JPanel();
        txtTitle2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        updateDescription = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnRemove1 = new javax.swing.JButton();
        btnAttach3 = new javax.swing.JButton();
        ideaImg1 = new javax.swing.JLabel();
        lblImg1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        addIdea = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblImg = new javax.swing.JLabel();
        ideaImg = new javax.swing.JLabel();
        btnAttach2 = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        Blog = new javax.swing.JPanel();
        btnSearch1 = new javax.swing.JButton();
        txtSearch1 = new javax.swing.JTextField();
        btnGetFeedback1 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblViewIdea1 = new javax.swing.JTable();
        Feedbacks = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        feedbackScroll1 = new javax.swing.JScrollPane();
        tblViewFeedback1 = new javax.swing.JTable();
        View = new javax.swing.JPanel();
        txtTitle3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        updateDescription1 = new javax.swing.JTextField();
        ideaImg2 = new javax.swing.JLabel();
        lblImg2 = new javax.swing.JLabel();
        add = new javax.swing.JPanel();
        txtTitle4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        updateDescription2 = new javax.swing.JTextField();
        btnSave2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtResearcherName = new javax.swing.JTextField();

        setForeground(new java.awt.Color(0, 0, 153));
        setPreferredSize(new java.awt.Dimension(1150, 840));

        label.setFont(new java.awt.Font("Khmer MN", 1, 24)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("Researcher Dashboard");

        Researcher.setFont(new java.awt.Font("Khmer MN", 1, 14)); // NOI18N

        viewFeedback.setBackground(new java.awt.Color(0, 51, 153));
        viewFeedback.setPreferredSize(new java.awt.Dimension(1000, 720));

        btnGetFeedback.setBackground(new java.awt.Color(255, 204, 0));
        btnGetFeedback.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnGetFeedback.setText("Click me !!");
        btnGetFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetFeedbackActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 204, 0));
        btnDelete.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        txtSearch.setText("Enter Id or Title");

        tblViewIdea.setBackground(new java.awt.Color(232, 255, 254));
        tblViewIdea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Title", "Description", "Image", "Created Date", "author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblViewIdea);

        LayerVisible.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        LayerVisible.setFont(new java.awt.Font("Khmer MN", 1, 14)); // NOI18N

        Feedback.setBackground(new java.awt.Color(204, 204, 255));
        Feedback.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        feedbackScroll.setPreferredSize(new java.awt.Dimension(440, 380));

        tblViewFeedback.setBackground(new java.awt.Color(232, 255, 254));
        tblViewFeedback.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Provided By:", "Feedback", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        feedbackScroll.setViewportView(tblViewFeedback);

        javax.swing.GroupLayout FeedbackLayout = new javax.swing.GroupLayout(Feedback);
        Feedback.setLayout(FeedbackLayout);
        FeedbackLayout.setHorizontalGroup(
            FeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feedbackScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 1134, Short.MAX_VALUE)
        );
        FeedbackLayout.setVerticalGroup(
            FeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FeedbackLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(feedbackScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        LayerVisible.addTab("Feedbacks", Feedback);

        update.setBackground(new java.awt.Color(204, 204, 255));

        txtTitle2.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Title:");

        jLabel7.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Description:");

        updateDescription.setEnabled(false);
        jScrollPane1.setViewportView(updateDescription);

        btnUpdate.setBackground(new java.awt.Color(255, 204, 0));
        btnUpdate.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRemove1.setBackground(new java.awt.Color(255, 204, 0));
        btnRemove1.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        btnRemove1.setText("Remove");
        btnRemove1.setEnabled(false);
        btnRemove1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemove1ActionPerformed(evt);
            }
        });

        btnAttach3.setBackground(new java.awt.Color(255, 204, 0));
        btnAttach3.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        btnAttach3.setText("Attach");
        btnAttach3.setEnabled(false);
        btnAttach3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttach3ActionPerformed(evt);
            }
        });

        ideaImg1.setBackground(new java.awt.Color(255, 255, 255));
        ideaImg1.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        ideaImg1.setText("<No Image>");
        ideaImg1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ideaImg1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ideaImg1.setMaximumSize(new java.awt.Dimension(73, 19));
        ideaImg1.setMinimumSize(new java.awt.Dimension(73, 19));
        ideaImg1.setPreferredSize(new java.awt.Dimension(73, 19));

        lblImg1.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        lblImg1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblImg1.setText("Image:");

        btnSave.setBackground(new java.awt.Color(255, 204, 0));
        btnSave.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateLayout = new javax.swing.GroupLayout(update);
        update.setLayout(updateLayout);
        updateLayout.setHorizontalGroup(
            updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateLayout.createSequentialGroup()
                .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(updateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 95, Short.MAX_VALUE)
                .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updateLayout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(32, 32, 32)
                        .addComponent(btnSave))
                    .addGroup(updateLayout.createSequentialGroup()
                        .addComponent(lblImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ideaImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemove1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(btnAttach3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(141, 141, 141))
        );
        updateLayout.setVerticalGroup(
            updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updateLayout.createSequentialGroup()
                        .addGap(0, 78, Short.MAX_VALUE)
                        .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ideaImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImg1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateLayout.createSequentialGroup()
                        .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(btnAttach3)
                                .addGap(31, 31, 31)
                                .addComponent(btnRemove1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGroup(updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(updateLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel7))
                                    .addGroup(updateLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        updateLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSave, btnUpdate});

        LayerVisible.addTab("Update Idea", update);

        jLabel14.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 204, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Selected Idea..");

        javax.swing.GroupLayout viewFeedbackLayout = new javax.swing.GroupLayout(viewFeedback);
        viewFeedback.setLayout(viewFeedbackLayout);
        viewFeedbackLayout.setHorizontalGroup(
            viewFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewFeedbackLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane4)
            .addComponent(LayerVisible)
            .addGroup(viewFeedbackLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGetFeedback)
                .addGap(316, 316, 316)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewFeedbackLayout.setVerticalGroup(
            viewFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewFeedbackLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(viewFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGetFeedback)
                    .addComponent(btnDelete)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LayerVisible))
        );

        Researcher.addTab("View Feedback", viewFeedback);

        addIdea.setBackground(new java.awt.Color(0, 102, 204));
        addIdea.setPreferredSize(new java.awt.Dimension(1100, 750));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Description:");

        lblImg.setBackground(new java.awt.Color(255, 255, 255));
        lblImg.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        lblImg.setForeground(new java.awt.Color(255, 255, 255));
        lblImg.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblImg.setText("Image:");

        ideaImg.setBackground(new java.awt.Color(255, 255, 255));
        ideaImg.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        ideaImg.setForeground(new java.awt.Color(255, 255, 255));
        ideaImg.setText("<No Image>");
        ideaImg.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ideaImg.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnAttach2.setBackground(new java.awt.Color(255, 204, 0));
        btnAttach2.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnAttach2.setText("Attach");
        btnAttach2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttach2ActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(255, 204, 0));
        btnRemove.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 204, 102));
        btnAdd.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnAdd.setText("Add Idea");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Title:");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setViewportBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane3.setMaximumSize(new java.awt.Dimension(32767, 300));

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane3.setViewportView(txtDescription);

        javax.swing.GroupLayout addIdeaLayout = new javax.swing.GroupLayout(addIdea);
        addIdea.setLayout(addIdeaLayout);
        addIdeaLayout.setHorizontalGroup(
            addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addIdeaLayout.createSequentialGroup()
                .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addIdeaLayout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblImg, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addIdeaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(addIdeaLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(ideaImg, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAttach2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(addIdeaLayout.createSequentialGroup()
                        .addGap(488, 488, 488)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(329, Short.MAX_VALUE))
        );
        addIdeaLayout.setVerticalGroup(
            addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addIdeaLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addIdeaLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addIdeaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addIdeaLayout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(btnAttach2)
                                .addGap(32, 32, 32)
                                .addComponent(btnRemove))
                            .addGroup(addIdeaLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblImg))
                            .addGroup(addIdeaLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(ideaImg, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel3))
                .addGap(47, 47, 47)
                .addComponent(btnAdd)
                .addContainerGap())
        );

        Researcher.addTab("Add Idea", addIdea);

        Blog.setBackground(new java.awt.Color(0, 51, 153));
        Blog.setPreferredSize(new java.awt.Dimension(1100, 750));

        btnSearch1.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnSearch1.setText("Search");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        txtSearch1.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        txtSearch1.setText("Enter Id or title");

        btnGetFeedback1.setBackground(new java.awt.Color(255, 204, 0));
        btnGetFeedback1.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N
        btnGetFeedback1.setText("click me!!");
        btnGetFeedback1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetFeedback1ActionPerformed(evt);
            }
        });

        tblViewIdea1.setBackground(new java.awt.Color(232, 255, 254));
        tblViewIdea1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Title", "Description", "Image", "Created Date", "Author"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tblViewIdea1);

        Feedbacks.setFont(new java.awt.Font("Khmer MN", 1, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));

        tblViewFeedback1.setBackground(new java.awt.Color(232, 255, 254));
        tblViewFeedback1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Provided By:", "Feedback", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        feedbackScroll1.setViewportView(tblViewFeedback1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feedbackScroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 1138, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(feedbackScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        Feedbacks.addTab("Feedbacks ", jPanel1);

        View.setBackground(new java.awt.Color(204, 204, 255));

        txtTitle3.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Title:");

        jLabel9.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Description:");

        updateDescription1.setEnabled(false);
        jScrollPane2.setViewportView(updateDescription1);

        ideaImg2.setBackground(new java.awt.Color(255, 255, 255));
        ideaImg2.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        ideaImg2.setText("<No Image>");
        ideaImg2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ideaImg2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ideaImg2.setMaximumSize(new java.awt.Dimension(73, 19));
        ideaImg2.setMinimumSize(new java.awt.Dimension(73, 19));
        ideaImg2.setPreferredSize(new java.awt.Dimension(73, 19));

        lblImg2.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        lblImg2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblImg2.setText("Image:");

        javax.swing.GroupLayout ViewLayout = new javax.swing.GroupLayout(View);
        View.setLayout(ViewLayout);
        ViewLayout.setHorizontalGroup(
            ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewLayout.createSequentialGroup()
                .addGroup(ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ViewLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 101, Short.MAX_VALUE)
                .addComponent(lblImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ideaImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255))
        );
        ViewLayout.setVerticalGroup(
            ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addGroup(ViewLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewLayout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ideaImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImg2))
                .addGap(76, 76, 76))
        );

        Feedbacks.addTab("View Idea", View);

        add.setBackground(new java.awt.Color(204, 204, 255));

        jLabel10.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Idea Title:");

        jLabel11.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Feedback:");

        jScrollPane5.setViewportView(updateDescription2);

        btnSave2.setBackground(new java.awt.Color(255, 204, 0));
        btnSave2.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        btnSave2.setText("Save");
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addLayout = new javax.swing.GroupLayout(add);
        add.setLayout(addLayout);
        addLayout.setHorizontalGroup(
            addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTitle4))
                    .addGroup(addLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52)
                .addComponent(btnSave2)
                .addContainerGap(489, Short.MAX_VALUE))
        );
        addLayout.setVerticalGroup(
            addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitle4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(btnSave2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        Feedbacks.addTab("Add Feedback", add);

        jLabel13.setFont(new java.awt.Font("Khmer MN", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 204, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Selected Idea..");

        javax.swing.GroupLayout BlogLayout = new javax.swing.GroupLayout(Blog);
        Blog.setLayout(BlogLayout);
        BlogLayout.setHorizontalGroup(
            BlogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BlogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
            .addGroup(BlogLayout.createSequentialGroup()
                .addGap(723, 723, 723)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGetFeedback1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(Feedbacks)
            .addComponent(jScrollPane9)
        );
        BlogLayout.setVerticalGroup(
            BlogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BlogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BlogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch1)
                    .addComponent(btnSearch1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BlogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGetFeedback1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Feedbacks, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        Researcher.addTab("Blog", Blog);

        txtResearcherName.setFont(new java.awt.Font("Khmer MN", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(448, 448, 448)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtResearcherName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Researcher, javax.swing.GroupLayout.DEFAULT_SIZE, 1138, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtResearcherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Researcher, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void tblViewIdeaMouseClicked(java.awt.event.MouseEvent evt) {

        if (tblViewIdea1.getSelectedRow() >= 0) {
            Feedbacks.setVisible(false); 
        }
        if (tblViewIdea.getSelectedRow() >= 0) {
            LayerVisible.setVisible(false); 
        }
    }
        
    

private List<ResearcherWorkRequest> fetchResearchRequestsForUser(String username, String status) {
    List<ResearcherWorkRequest> filteredRequests = new ArrayList<>();
    Person currentUserPerson = account.getPerson(); // Directly using the person object from the logged-in user's account

    for (Network network : business.getNetworkList()) {
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganisationList()) {
                for (WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()) {
                    if (workRequest instanceof ResearcherWorkRequest) {
                        ResearcherWorkRequest researcherRequest = (ResearcherWorkRequest) workRequest;
                        // Checking if the request is associated with the logged-in researcher
                        if (researcherRequest.getResearcherName().equalsIgnoreCase(currentUserPerson.getFirstName() + " " + currentUserPerson.getLastName())) {
                            // Filtering based on status
                            if (status.equals("All") || researcherRequest.getStatus().toString().equalsIgnoreCase(status)) {
                                filteredRequests.add(researcherRequest);
                            }
                        }
                    }
                }
            }
        }
    }
    return filteredRequests;
}   


  
    
    private void ResearcherStateChanged(javax.swing.event.ChangeEvent evt) {
    JTabbedPane tabSource = (JTabbedPane) evt.getSource();
    int selectedIndex = tabSource.getSelectedIndex();
    String selectedTabTitle = tabSource.getTitleAt(selectedIndex);
    
    if ("Blog".equals(selectedTabTitle)) {
        
        Feedbacks.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                innerTabbedPaneStateChanged(evt);
            }
        });
    }else if("View Feedback".equals(selectedTabTitle)) {
        
        LayerVisible.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                viewInnerTabbedPaneStateChanged(evt);
            }
        });
    }
}
    private void innerTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {
    JTabbedPane tabSource = (JTabbedPane) evt.getSource();
    int selectedIndex = tabSource.getSelectedIndex();
    
    final int VIEW_IDEA_TAB_INDEX = 1; 
    final int ADD_FEEDBACK_TAB_INDEX = 2; 

    // Handling View Idea tab
    if (selectedIndex == VIEW_IDEA_TAB_INDEX) {
        int selectedRow = tblViewIdea1.getSelectedRow();
        if (selectedRow != -1) {
            int ideaId = Integer.parseInt(tblViewIdea1.getValueAt(selectedRow, 0).toString());
            Idea idea = business.getIdeaDirectory().getIdeaById(ideaId);
            if (idea != null) {
                txtTitle3.setText(idea.getTitle());
                updateDescription1.setText(idea.getDescription());
                ImageIcon imageIcon = idea.getIdeaImage();
                if(imageIcon != null) {
                    ideaImg2.setIcon(new ImageIcon(imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH)));
                } else {
                    ideaImg2.setIcon(null);
                    ideaImg2.setText("<No Image>");
                }
            }
        }
        }
        else if (selectedIndex == ADD_FEEDBACK_TAB_INDEX) {
            int selectedRow = tblViewIdea1.getSelectedRow();
            if (selectedRow != -1) {
                int ideaId = Integer.parseInt(tblViewIdea1.getValueAt(selectedRow, 0).toString());
                Idea idea = business.getIdeaDirectory().getIdeaById(ideaId);
                if (idea != null) {
                    txtTitle4.setText(idea.getTitle());
                    updateDescription2.setText(""); 
                }
            }
        }
    }
    
    private void viewInnerTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {
        JTabbedPane tabSource = (JTabbedPane) evt.getSource();
        int selectedIndex = tabSource.getSelectedIndex();

        final int UPDATE_IDEA_TAB_INDEX = 1; 

        if (selectedIndex == UPDATE_IDEA_TAB_INDEX) {
            int selectedRow = tblViewIdea.getSelectedRow();
            if (selectedRow != -1) {
                int ideaId = Integer.parseInt(tblViewIdea.getValueAt(selectedRow, 0).toString());
                Idea idea = business.getIdeaDirectory().getIdeaById(ideaId);
                if (idea != null) {
                    txtTitle2.setText(idea.getTitle());
                    updateDescription.setText(idea.getDescription());
                    ImageIcon imageIcon = idea.getIdeaImage();
                    if(imageIcon != null) {
                        ideaImg1.setIcon(new ImageIcon(imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH)));
                    } else {
                        ideaImg1.setIcon(null);
                        ideaImg1.setText("<No Image>");
                    }
                }
            } 
        }
    }

    private void btnGetFeedback1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetFeedback1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblViewIdea1.getSelectedRow();
    if (selectedRow >= 0) {
        try {
            int ideaId = Integer.parseInt(tblViewIdea1.getValueAt(selectedRow, 0).toString());
            populateFeedbackTable1(ideaId);
            Feedbacks.setVisible(true); // Make the feedback table visible for Blog
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error parsing idea ID from the selected row.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select an idea to view feedback.");
    }
    }//GEN-LAST:event_btnGetFeedback1ActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        // TODO add your handling code here:
        String searchText = txtSearch1.getText().trim().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) tblViewIdea1.getModel();
        model.setRowCount(0); // Clear existing rows

        for (Idea idea : business.getIdeaDirectory().getIdeaList()) {

            if ((Integer.toString(idea.getIdeaId()).contains(searchText) ||
                idea.getTitle().toLowerCase().contains(searchText))) {

            // Add the idea to the table
            ImageIcon icon = idea.getIdeaImage();
            if (icon != null) {
                // Scale the icon if necessary
                Image image = icon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                icon = new ImageIcon(image);
            }

            model.addRow(new Object[]{
                idea.getIdeaId(),
                idea.getTitle(),
                idea.getDescription(),
                icon,
                formatDate(idea.getCreatedDate())
            });
        }
        }
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        // Validate input
        if (txtTitle.getText().isEmpty() || txtDescription.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all the required fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate image attachment
        if (ideaImage == null) {
            JOptionPane.showMessageDialog(this, "Please attach an image for the product.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int lastIdeaId = business.getIdeaDirectory().getIdeaList().stream()
        .mapToInt(Idea::getIdeaId)
        .max()
        .orElse(0);
        int ideaId = lastIdeaId + 1;
        String author = account.getPerson().getFirstName() + " " + account.getPerson().getLastName();

        String title = txtTitle.getText();
        String description = txtDescription.getText();

        Idea idea = new Idea(ideaId, title,description ,ideaImage, author, account.getPerson().getPersonId());

        business.getIdeaDirectory().addIdea(idea);

        JOptionPane.showMessageDialog(this, "Idea added successfully", "Warning", JOptionPane.INFORMATION_MESSAGE);

        // Clear the form fields
        txtTitle.setText("");
        txtDescription.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:

        ideaImage= null;
        ideaImg.setIcon(ideaImage);
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAttach2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttach2ActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            URL url;
            try {
                url = file.toURI().toURL();
                ideaImage = new ImageIcon(url);
                ideaImage = new ImageIcon(ideaImage.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH));

                ideaImg.setIcon(ideaImage);
            } catch (MalformedURLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Failed to load image", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAttach2ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String searchText = txtSearch.getText().trim();
        DefaultTableModel model = (DefaultTableModel) tblViewIdea.getModel();
        model.setRowCount(0); // Clear existing rows

        if (searchText.isEmpty()) {
            // If the search text is empty, show all ideas again
            populateIdeaTable(userId);
        } else {
            // Iterate through the idea list and check for matches with the search text
            for (Idea idea : business.getIdeaDirectory().getIdeaList()) {
                if (idea.getPersonId() == userId &&
                    (Integer.toString(idea.getIdeaId()).contains(searchText) ||
                        idea.getTitle().toLowerCase().contains(searchText.toLowerCase()))) {

                    // Add the idea to the table
                    ImageIcon icon = idea.getIdeaImage();
                    if (icon != null) {
                        // Scale the icon if necessary
                        Image image = icon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                        icon = new ImageIcon(image);
                    }

                    model.addRow(new Object[]{
                        idea.getIdeaId(),
                        idea.getTitle(),
                        idea.getDescription(),
                        icon,
                        formatDate(idea.getCreatedDate())
                    });
                }
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tblViewIdea.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first");
            return;
        }
        int ideaId = (int) tblViewIdea.getValueAt(row, 0); // Assuming the idea ID is in the first column

        // Confirm deletion
        int confirmDialog = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this idea and all associated feedback?", "Warning", JOptionPane.YES_NO_OPTION);
        if(confirmDialog == JOptionPane.YES_OPTION) {
            // Delete the idea
            Idea selectedIdea = business.getIdeaDirectory().getIdeaById(ideaId);
            if (selectedIdea != null) {
                business.getIdeaDirectory().removeIdea(selectedIdea);

                // Also delete all feedback related to the idea
                business.getFeedbackDirectory().removeFeedbackByIdeaId(ideaId);

                // Update the tables to reflect the changes
                populateIdeaTable(userId);
                populateFeedbackTable(ideaId); // This should now be empty
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnGetFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetFeedbackActionPerformed
        // TODO add your handling code here:
    int selectedRow = tblViewIdea.getSelectedRow();
    if (selectedRow >= 0) {
        try {
            int ideaId = Integer.parseInt(tblViewIdea.getValueAt(selectedRow, 0).toString());
            populateFeedbackTable(ideaId);
            System.out.println("Making feedback table visible");
            LayerVisible.setVisible(true); // Make the feedback table visible
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error parsing idea ID from the selected row.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select an idea to view feedback.");
    }
    }//GEN-LAST:event_btnGetFeedbackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        btnUpdate.setEnabled(false);
        btnSave.setEnabled(true);
        btnAttach3.setEnabled(true);
        btnRemove1.setEnabled(true);
        txtTitle2.setEnabled(true);
        updateDescription.setEnabled(true);

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemove1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemove1ActionPerformed
        // TODO add your handling code here:

        ideaImage= null;
        ideaImg1.setIcon(ideaImage);
    }//GEN-LAST:event_btnRemove1ActionPerformed

    private void btnAttach3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttach3ActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            URL url;
            try {
                url = file.toURI().toURL();
                ideaImage = new ImageIcon(url);
                ideaImage = new ImageIcon(ideaImage.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH));

                ideaImg1.setIcon(ideaImage);
            } catch (MalformedURLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Failed to load image", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAttach3ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblViewIdea.getSelectedRow();
        int ideaId = Integer.parseInt(tblViewIdea.getValueAt(selectedRow, 0).toString());
        Idea existingIdea = business.getIdeaDirectory().getIdeaById(ideaId);
        if (existingIdea != null) {
            existingIdea.setTitle(txtTitle2.getText());
            existingIdea.setDescription(updateDescription.getText());
            existingIdea.setIdeaImage(ideaImage);
        }

        JOptionPane.showMessageDialog(this, "Idea successfully updated", "Warning", JOptionPane.INFORMATION_MESSAGE);

        txtTitle2.setText("");
        updateDescription.setText("");
        ideaImage = null;
        ideaImg1.setIcon(null);
        btnUpdate.setEnabled(true);
        btnSave.setEnabled(false);
        txtTitle2.setEnabled(false);
        updateDescription.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        // TODO add your handling code here:
        if (updateDescription2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all the required fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int selectedRow = tblViewIdea1.getSelectedRow();
        int ideaId = Integer.parseInt(tblViewIdea1.getValueAt(selectedRow, 0).toString());
        Idea existingIdea = business.getIdeaDirectory().getIdeaById(ideaId);
        String author = account.getPerson().getFirstName() + " " + account.getPerson().getLastName();

        if (existingIdea != null) {
            txtTitle4.setText(existingIdea.getTitle());
        }
        String details = updateDescription2.getText();

        int lastfeedId = 0;
        for (Feedback feedback : business.getFeedbackDirectory().getFeedbackList()) {
            if (feedback.getFeedId() > lastfeedId) {
                lastfeedId = feedback.getFeedId();
            }
        }
        int feedId = lastfeedId + 1;


        Feedback feedback = new Feedback(feedId, ideaId, details, author, account.getPerson().getPersonId());

        business.getFeedbackDirectory().addFeed(feedback);

        JOptionPane.showMessageDialog(this, "Feedback added successfully", "Warning", JOptionPane.INFORMATION_MESSAGE);

        // Clear the form fields
        txtTitle4.setText("");
        updateDescription2.setText("");
        populateFeedbackTable1(ideaId);



 
    }//GEN-LAST:event_btnSave2ActionPerformed
    
     public void populateIdeaTable(int userId) {
    DefaultTableModel model = (DefaultTableModel) tblViewIdea.getModel();
    model.setRowCount(0);

    for (Idea idea : business.getIdeaDirectory().getIdeaList()) {
        if (idea.getPersonId() == userId) {
            ImageIcon icon = idea.getIdeaImage();
            if (icon != null) {
                // Scale the icon if necessary
                Image image = icon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                icon = new ImageIcon(image);
            }

            model.addRow(new Object[]{
                idea.getIdeaId(),
                idea.getTitle(),
                idea.getDescription(),
                icon,
                formatDate(idea.getCreatedDate()),
                idea.getAuthor()
            });
        }
    }
}

 
     //Table 1
     public void populateIdeaTable1() {
        DefaultTableModel model = (DefaultTableModel) tblViewIdea1.getModel();
    model.setRowCount(0);

    for (Idea idea : business.getIdeaDirectory().getIdeaList()) {
        ImageIcon icon = idea.getIdeaImage();
        if (icon != null) {
            // Scale the icon if necessary
            Image image = icon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
            icon = new ImageIcon(image);
        }


        model.addRow(new Object[]{
            idea.getIdeaId(),
            idea.getTitle(),
            idea.getDescription(),
            icon,
            formatDate(idea.getCreatedDate()),
            idea.getAuthor()
        });
    }
     } 
     
     private void setupTableTextWrap() {
        tblViewIdea.setDefaultRenderer(Object.class, new TableCellRenderer() {
            private final JTextArea textArea = new JTextArea();

            {
                textArea.setLineWrap(true);
                textArea.setWrapStyleWord(true);
                textArea.setOpaque(true);
            }

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value instanceof ImageIcon) {
                    return new JLabel((ImageIcon) value);
                } else {
                    textArea.setText(value != null ? value.toString() : "");
                    textArea.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
                    textArea.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());
                    return textArea;
                }
            }
        });

        // Adjust row height to accommodate text area
        tblViewIdea.setRowHeight(150); // You might need to adjust this value

        // Apply the same renderer and row height to the feedback table
        tblViewFeedback.setDefaultRenderer(Object.class, new TableCellRenderer() {
            private final JTextArea textArea = new JTextArea();

            {
                textArea.setLineWrap(true);
                textArea.setWrapStyleWord(true);
                textArea.setOpaque(true);
            }

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value instanceof ImageIcon) {
                    return new JLabel((ImageIcon) value);
                } else {
                    textArea.setText(value != null ? value.toString() : "");
                    textArea.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
                    textArea.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());
                    return textArea;
                }
            }
        });

        // Adjust row height for feedback table
        tblViewFeedback.setRowHeight(50); // You might need to adjust this value
    }
    
     //Table 2
    private void setupTableTextWrap1() {
        tblViewIdea1.setDefaultRenderer(Object.class, new TableCellRenderer() {
            private final JTextArea textArea = new JTextArea();

            {
                textArea.setLineWrap(true);
                textArea.setWrapStyleWord(true);
                textArea.setOpaque(true);
            }

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value instanceof ImageIcon) {
                    return new JLabel((ImageIcon) value);
                } else {
                    textArea.setText(value != null ? value.toString() : "");
                    textArea.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
                    textArea.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());
                    return textArea;
                }
            }
        });

        // Adjust row height to accommodate text area
        tblViewIdea1.setRowHeight(150); // You might need to adjust this value

        // Apply the same renderer and row height to the feedback table
        tblViewFeedback1.setDefaultRenderer(Object.class, new TableCellRenderer() {
            private final JTextArea textArea = new JTextArea();

            {
                textArea.setLineWrap(true);
                textArea.setWrapStyleWord(true);
                textArea.setOpaque(true);
            }

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value instanceof ImageIcon) {
                    return new JLabel((ImageIcon) value);
                } else {
                    textArea.setText(value != null ? value.toString() : "");
                    textArea.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
                    textArea.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());
                    return textArea;
                }
            }
        });

        // Adjust row height for feedback table
        tblViewFeedback1.setRowHeight(50); // You might need to adjust this value
    }
     
    public String formatDate(Date date) {
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        return formatter.format(date);
    }
    

    
    public void populateFeedbackTable(int ideaId) {
        DefaultTableModel model = (DefaultTableModel) tblViewFeedback.getModel();
        model.setRowCount(0);

        for (Feedback feedback : business.getFeedbackDirectory().getFeedbackListByIdeaId(ideaId)) {
            model.addRow(new Object[]{
                feedback.getFeedId(),
                feedback.getAuthor(),
                feedback.getDetails(),
                formatDate(feedback.getDate())
            });
        }        

        tblViewFeedback.setRowHeight(50);
    }
    
    
    
    public void populateFeedbackTable1(int ideaId) {
        DefaultTableModel model = (DefaultTableModel) tblViewFeedback1.getModel();
        model.setRowCount(0);

        for (Feedback feedback : business.getFeedbackDirectory().getFeedbackListByIdeaId(ideaId)) {
            model.addRow(new Object[]{
                feedback.getFeedId(),
                feedback.getAuthor(),
                feedback.getDetails(),
                formatDate(feedback.getDate())
            });
        }        

        tblViewFeedback1.setRowHeight(50);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Blog;
    private javax.swing.JPanel Feedback;
    private javax.swing.JTabbedPane Feedbacks;
    private javax.swing.JTabbedPane LayerVisible;
    private javax.swing.JTabbedPane Researcher;
    private javax.swing.JPanel View;
    private javax.swing.JPanel add;
    private javax.swing.JPanel addIdea;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAttach2;
    private javax.swing.JButton btnAttach3;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGetFeedback;
    private javax.swing.JButton btnGetFeedback1;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRemove1;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane feedbackScroll;
    private javax.swing.JScrollPane feedbackScroll1;
    private javax.swing.JLabel ideaImg;
    private javax.swing.JLabel ideaImg1;
    private javax.swing.JLabel ideaImg2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel label;
    private javax.swing.JLabel lblImg;
    private javax.swing.JLabel lblImg1;
    private javax.swing.JLabel lblImg2;
    private javax.swing.JTable tblViewFeedback;
    private javax.swing.JTable tblViewFeedback1;
    private javax.swing.JTable tblViewIdea;
    private javax.swing.JTable tblViewIdea1;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtResearcherName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearch1;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtTitle2;
    private javax.swing.JTextField txtTitle3;
    private javax.swing.JTextField txtTitle4;
    private javax.swing.JPanel update;
    private javax.swing.JTextField updateDescription;
    private javax.swing.JTextField updateDescription1;
    private javax.swing.JTextField updateDescription2;
    private javax.swing.JPanel viewFeedback;
    // End of variables declaration//GEN-END:variables
public class ImageRenderer extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (value instanceof ImageIcon) {
                JLabel label = new JLabel();
                label.setIcon((ImageIcon) value);
                return label;
            }
            return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        }
    }

}
